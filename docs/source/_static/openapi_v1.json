{
  "openapi": "3.1.0",
  "info": {
    "title": "Aignostics Platform API reference",
    "description": "\nPagination is done via `page` and `page_size`. Sorting via `sort` query parameter.\nThe `sort` query parameter can be provided multiple times. The sorting direction can be indicated via\n`+` (ascending) or `-` (descending) (e.g. `/v1/applications?sort=+name)`.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/v1/applications": {
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "List Applications",
        "description": "Returns the list of the applications, available to the caller.\n\nThe application is available if any of the version of the application is assigned to the\nuser organization. To switch between organizations, the user should re-login and choose the\nneeded organization.",
        "operationId": "list_applications_v1_applications_get",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 5,
              "default": 50,
              "title": "Page Size"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationReadResponse"
                  },
                  "title": "Response List Applications V1 Applications Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/applications/{application_id}/versions": {
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "List Versions By Application Id",
        "description": "Returns the list of the application versions for this application, available to the caller.\n\nThe application version is available if it is assigned to the user's organization.\n\nThe application versions are assigned to the organization by the Aignostics admin. To\nassign or unassign a version from your organization, please contact Aignostics support team.",
        "operationId": "list_versions_by_application_id_v1_applications__application_id__versions_get",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ],
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Application Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 5,
              "default": 50,
              "title": "Page Size"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version"
            }
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ],
                  "minItems": 1,
                  "maxItems": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationVersionReadResponse"
                  },
                  "title": "Response List Versions By Application Id V1 Applications  Application Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs": {
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "List Application Runs",
        "description": "The endpoint returns the application runs triggered by the caller. After the application run\nis created by POST /v1/runs, it becomes available for the current endpoint",
        "operationId": "list_application_runs_v1_runs_get",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ],
        "parameters": [
          {
            "name": "application_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional application ID filter",
              "title": "Application Id"
            },
            "description": "Optional application ID filter"
          },
          {
            "name": "application_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional application version filter",
              "title": "Application Version"
            },
            "description": "Optional application version filter"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ],
                  "minItems": 1,
                  "maxItems": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Request optional output values. Used internally by the platform",
              "title": "Include"
            },
            "description": "Request optional output values. Used internally by the platform"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 5,
              "default": 50,
              "title": "Page Size"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunReadResponse"
                  },
                  "title": "Response List Application Runs V1 Runs Get"
                }
              }
            }
          },
          "404": {
            "description": "Application run not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Public"
        ],
        "summary": "Create Application Run",
        "description": "The endpoint is used to process the input items by the chosen application version. The endpoint\nreturns the `application_run_id`. The processing fo the items is done asynchronously.\n\nTo check the status or cancel the execution, use the /v1/runs/{application_run_id} endpoint.\n\n### Payload\n\nThe payload includes `application_version_id` and `items` base fields.\n\n`application_version_id` is the id used for `/v1/versions/{application_id}` endpoint.\n\n`items` includes the list of the items to process (slides, in case of HETA application).\nEvery item has a set of standard fields defined by the API, plus the metadata, specific to the\nchosen application.\n\nExample payload structure with the comments:\n```\n{\n    application_version_id: \"heta:v1.0.0\",\n    items: [{\n        \"reference\": \"slide_1\"  <-- Input ID to connect the input and the output artifact\n        \"input_artifacts\": [{\n            \"name\": \"input_slide\"  <-- Name of the artifact defined by the application (For HETA it is\"input_slide\")\n            \"download_url\": \"https://...\" <-- signed URL to the input file in the S3 or GCS. Should be valid for more than 6 days\n            \"metadata\": { <-- The metadata fields defined by the application. (The example fields set for a slide files are provided)\n                \"checksum_crc32c\": \"abc12==\",\n                \"mime_type\": \"image/tiff\",\n                \"height\": 100,\n                \"weight\": 500,\n                \"mpp\": 0.543\n            }\n        }]\n    }]\n}\n```\n\n### Response\n\nThe endpoint returns the application run UUID. After that the job is scheduled for the\nexecution in the background.\n\nTo check the status of the run call `v1/runs/{application_run_id}`.\n\n### Rejection\n\nApart from the authentication, authorization and malformed input error, the request can be\nrejected when the quota limit is exceeded. More details on quotas is described in the\ndocumentation",
        "operationId": "create_application_run_v1_runs_post",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunCreationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunCreationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application run not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs/{application_run_id}": {
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "Get Run",
        "description": "Returns the details of the application run. The application run is available as soon as it is\ncreated via `POST /runs/` endpoint. To download the items results, call\n`/runs/{application_run_id}/results`.\n\nThe application is only available to the user who triggered it, regardless of the role.",
        "operationId": "get_run_v1_runs__application_run_id__get",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ],
        "parameters": [
          {
            "name": "application_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Application run id, returned by `POST /runs/` endpoint",
              "title": "Application Run Id"
            },
            "description": "Application run id, returned by `POST /runs/` endpoint"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ],
                  "minItems": 1,
                  "maxItems": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunReadResponse"
                }
              }
            }
          },
          "404": {
            "description": "Application run not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs/{application_run_id}/cancel": {
      "post": {
        "tags": [
          "Public"
        ],
        "summary": "Cancel Application Run",
        "description": "The application run can be canceled by the user who created the application run.\n\nThe execution can be canceled any time while the application is not in a final state. The\npending items will not be processed and will not add to the cost.\n\nWhen the application is canceled, the already completed items stay available for download.",
        "operationId": "cancel_application_run_v1_runs__application_run_id__cancel_post",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ],
        "parameters": [
          {
            "name": "application_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Application run id, returned by `POST /runs/` endpoint",
              "title": "Application Run Id"
            },
            "description": "Application run id, returned by `POST /runs/` endpoint"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Application run not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/runs/{application_run_id}/results": {
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "List Run Results",
        "description": "Get the list of the results for the run items",
        "operationId": "list_run_results_v1_runs__application_run_id__results_get",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ],
        "parameters": [
          {
            "name": "application_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Application run id, returned by `POST /runs/` endpoint",
              "title": "Application Run Id"
            },
            "description": "Application run id, returned by `POST /runs/` endpoint"
          },
          {
            "name": "item_id__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter for items ids",
              "title": "Item Id  In"
            },
            "description": "Filter for items ids"
          },
          {
            "name": "reference__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter for items by their reference from the input payload",
              "title": "Reference  In"
            },
            "description": "Filter for items by their reference from the input payload"
          },
          {
            "name": "status__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemStatus"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter for items in certain statuses",
              "title": "Status  In"
            },
            "description": "Filter for items in certain statuses"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 5,
              "default": 50,
              "title": "Page Size"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemResultReadResponse"
                  },
                  "title": "Response List Run Results V1 Runs  Application Run Id  Results Get"
                }
              }
            }
          },
          "404": {
            "description": "Application run not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Public"
        ],
        "summary": "Delete Application Run Results",
        "description": "Delete the application run results. It can only be called when the application is in a final\nstate (meaning it's not in `received` or `pending` states). To delete the results of the running\nartifacts, first call `POST /v1/runs/{application_run_id}/cancel` to cancel the application run.\n\nThe output results are deleted automatically 30 days after the application run is finished.",
        "operationId": "delete_application_run_results_v1_runs__application_run_id__results_delete",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          }
        ],
        "parameters": [
          {
            "name": "application_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Application run id, returned by `POST /runs/` endpoint",
              "title": "Application Run Id"
            },
            "description": "Application run id, returned by `POST /runs/` endpoint"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Application run not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApplicationReadResponse": {
        "properties": {
          "application_id": {
            "type": "string",
            "title": "Application Id",
            "description": "Application ID",
            "examples": [
              "h-e-tme"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Application display name",
            "examples": [
              "HETA"
            ]
          },
          "regulatory_classes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Regulatory Classes",
            "description": "Regulatory class, to which the applications compliance",
            "examples": [
              [
                "RuO"
              ]
            ]
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Application documentations"
          }
        },
        "type": "object",
        "required": [
          "application_id",
          "name",
          "regulatory_classes",
          "description"
        ],
        "title": "ApplicationReadResponse"
      },
      "ApplicationRunStatus": {
        "type": "string",
        "enum": [
          "canceled_system",
          "canceled_user",
          "completed",
          "completed_with_error",
          "received",
          "rejected",
          "running",
          "scheduled"
        ],
        "title": "ApplicationRunStatus"
      },
      "ApplicationVersionReadResponse": {
        "properties": {
          "application_version_id": {
            "type": "string",
            "title": "Application Version Id",
            "description": "Application version ID",
            "examples": [
              "h-e-tme:v0.0.1"
            ]
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Semantic version of the application"
          },
          "application_id": {
            "type": "string",
            "title": "Application Id",
            "description": "Application ID"
          },
          "flow_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Flow Id",
            "description": "Flow ID, used internally by the platform"
          },
          "changelog": {
            "type": "string",
            "title": "Changelog",
            "description": "Description of the changes relative to the previous version"
          },
          "input_artifacts": {
            "items": {
              "$ref": "#/components/schemas/InputArtifactReadResponse"
            },
            "type": "array",
            "title": "Input Artifacts",
            "description": "List of the input fields, provided by the User"
          },
          "output_artifacts": {
            "items": {
              "$ref": "#/components/schemas/OutputArtifactReadResponse"
            },
            "type": "array",
            "title": "Output Artifacts",
            "description": "List of the output fields, generated by the application"
          }
        },
        "type": "object",
        "required": [
          "application_version_id",
          "version",
          "application_id",
          "changelog",
          "input_artifacts",
          "output_artifacts"
        ],
        "title": "ApplicationVersionReadResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InputArtifactCreationRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The artifact name according to the application version. List of required artifacts is returned by `/v1/versions/{application_version_id}`. The artifact names are located in the `input_artifacts.[].name` value",
            "examples": [
              "slide"
            ]
          },
          "download_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Download Url",
            "description": "[Signed URL](https://cloud.google.com/cdn/docs/using-signed-urls) to the input artifact file. The URL should be valid for at least 6 days from the payload submission time.",
            "examples": [
              "https://example.com/case-no-1-slide.tiff"
            ]
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "The metadata of the artifact, required by the application version. The JSON schema of the metadata can be requested by `/v1/versions/{application_version_id}`. The schema is located in `input_artifacts.[].metadata_schema`",
            "examples": [
              {
                "checksum_crc32c": "752f9554",
                "height": 2000,
                "height_mpp": 0.5,
                "width": 10000,
                "width_mpp": 0.5
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "download_url",
          "metadata"
        ],
        "title": "InputArtifactCreationRequest"
      },
      "InputArtifactReadResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "mime_type": {
            "type": "string",
            "pattern": "^\\w+\\/\\w+[-+.|\\w+]+\\w+$",
            "title": "Mime Type",
            "examples": [
              "image/tiff"
            ]
          },
          "metadata_schema": {
            "type": "object",
            "title": "Metadata Schema"
          }
        },
        "type": "object",
        "required": [
          "name",
          "mime_type",
          "metadata_schema"
        ],
        "title": "InputArtifactReadResponse"
      },
      "ItemCreationRequest": {
        "properties": {
          "reference": {
            "type": "string",
            "title": "Reference",
            "description": "The ID of the slide provided by the caller. The reference should be unique across all items of the application run",
            "examples": [
              "case-no-1"
            ]
          },
          "input_artifacts": {
            "items": {
              "$ref": "#/components/schemas/InputArtifactCreationRequest"
            },
            "type": "array",
            "title": "Input Artifacts",
            "description": "All the input files of the item, required by the application version"
          }
        },
        "type": "object",
        "required": [
          "reference",
          "input_artifacts"
        ],
        "title": "ItemCreationRequest"
      },
      "ItemResultReadResponse": {
        "properties": {
          "item_id": {
            "type": "string",
            "format": "uuid",
            "title": "Item Id",
            "description": "Item UUID generated by the Platform"
          },
          "application_run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Application Run Id",
            "description": "Application run UUID to which the item belongs"
          },
          "reference": {
            "type": "string",
            "title": "Reference",
            "description": "The reference of the item from the user payload"
          },
          "status": {
            "$ref": "#/components/schemas/ItemStatus",
            "description": "\nWhen the item is not processed yet, the status is set to `pending`.\n\nWhen the item is successfully finished, status is set to `succeeded`, and the processing results\nbecome available for download in `output_artifacts` field.\n\nWhen the item processing is failed because the provided item is invalid, the status is set to\n`error_user`. When the item processing failed because of the error in the model or platform,\nthe status is set to `error_system`. When the application_run is canceled, the status of all\npending items is set to either `cancelled_user` or `cancelled_system`.\n    "
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "\nThe error message in case the item is in `error_system` or `error_user` state\n    "
          },
          "output_artifacts": {
            "items": {
              "$ref": "#/components/schemas/OutputArtifactResultReadResponse"
            },
            "type": "array",
            "title": "Output Artifacts",
            "description": "\nThe list of the results generated by the application algorithm. The number of files and their\ntypes depend on the particular application version, call `/v1/versions/{version_id}` to get\nthe details.\n    "
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "application_run_id",
          "reference",
          "status",
          "error",
          "output_artifacts"
        ],
        "title": "ItemResultReadResponse"
      },
      "ItemStatus": {
        "type": "string",
        "enum": [
          "pending",
          "canceled_user",
          "canceled_system",
          "error_user",
          "error_system",
          "succeeded"
        ],
        "title": "ItemStatus"
      },
      "OutputArtifactReadResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "mime_type": {
            "type": "string",
            "pattern": "^\\w+\\/\\w+[-+.|\\w+]+\\w+$",
            "title": "Mime Type",
            "examples": [
              "application/vnd.apache.parquet"
            ]
          },
          "metadata_schema": {
            "type": "object",
            "title": "Metadata Schema"
          },
          "scope": {
            "$ref": "#/components/schemas/OutputArtifactScope"
          }
        },
        "type": "object",
        "required": [
          "name",
          "mime_type",
          "metadata_schema",
          "scope"
        ],
        "title": "OutputArtifactReadResponse"
      },
      "OutputArtifactResultReadResponse": {
        "properties": {
          "output_artifact_id": {
            "type": "string",
            "format": "uuid",
            "title": "Output Artifact Id",
            "description": "The Id of the artifact. Used internally"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "\nName of the output from the output schema from the `/v1/versions/{version_id}` endpoint.\n    "
          },
          "mime_type": {
            "type": "string",
            "pattern": "^\\w+\\/\\w+[-+.|\\w+]+\\w+$",
            "title": "Mime Type",
            "description": "The mime type of the output file",
            "examples": [
              "application/vnd.apache.parquet"
            ]
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "The metadata of the output artifact, provided by the application"
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url",
            "description": "\nThe download URL to the output file. The URL is valid for 1 hour after the endpoint is called.\nA new URL is generated every time the endpoint is called.\n    "
          }
        },
        "type": "object",
        "required": [
          "output_artifact_id",
          "name",
          "mime_type",
          "metadata",
          "download_url"
        ],
        "title": "OutputArtifactResultReadResponse"
      },
      "OutputArtifactScope": {
        "type": "string",
        "enum": [
          "item",
          "global"
        ],
        "title": "OutputArtifactScope"
      },
      "PayloadInputArtifact": {
        "properties": {
          "input_artifact_id": {
            "type": "string",
            "format": "uuid",
            "title": "Input Artifact Id"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          },
          "download_url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Download Url"
          }
        },
        "type": "object",
        "required": [
          "metadata",
          "download_url"
        ],
        "title": "PayloadInputArtifact"
      },
      "PayloadItem": {
        "properties": {
          "item_id": {
            "type": "string",
            "format": "uuid",
            "title": "Item Id"
          },
          "input_artifacts": {
            "additionalProperties": {
              "$ref": "#/components/schemas/PayloadInputArtifact"
            },
            "type": "object",
            "title": "Input Artifacts"
          },
          "output_artifacts": {
            "additionalProperties": {
              "$ref": "#/components/schemas/PayloadOutputArtifact"
            },
            "type": "object",
            "title": "Output Artifacts"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "input_artifacts",
          "output_artifacts"
        ],
        "title": "PayloadItem"
      },
      "PayloadOutputArtifact": {
        "properties": {
          "output_artifact_id": {
            "type": "string",
            "format": "uuid",
            "title": "Output Artifact Id"
          },
          "data": {
            "$ref": "#/components/schemas/TransferUrls"
          },
          "metadata": {
            "$ref": "#/components/schemas/TransferUrls"
          }
        },
        "type": "object",
        "required": [
          "output_artifact_id",
          "data",
          "metadata"
        ],
        "title": "PayloadOutputArtifact"
      },
      "RunCreationRequest": {
        "properties": {
          "application_version_id": {
            "type": "string",
            "title": "Application Version Id",
            "description": "Application version ID",
            "examples": [
              "h-e-tme:v1.2.3"
            ]
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ItemCreationRequest"
            },
            "type": "array",
            "title": "Items",
            "description": "List of the items to process by the application"
          }
        },
        "type": "object",
        "required": [
          "application_version_id",
          "items"
        ],
        "title": "RunCreationRequest",
        "description": "Application run payload. It describes which application version is chosen, and which user data\nshould be processed."
      },
      "RunCreationResponse": {
        "properties": {
          "application_run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Application Run Id",
            "default": "Application run id"
          }
        },
        "type": "object",
        "title": "RunCreationResponse"
      },
      "RunReadResponse": {
        "properties": {
          "application_run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Application Run Id",
            "description": "UUID of the application"
          },
          "application_version_id": {
            "type": "string",
            "title": "Application Version Id",
            "description": "ID of the application version"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id",
            "description": "Organization of the owner of the application run"
          },
          "user_payload": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserPayload"
              },
              {
                "type": "null"
              }
            ],
            "description": "Field used internally by the Platform"
          },
          "status": {
            "$ref": "#/components/schemas/ApplicationRunStatus",
            "description": "\nWhen the application run request is received by the Platform, the `status` of it is set to\n`received`. Then it is transitioned to `scheduled`, when it is scheduled for the processing.\nWhen the application run is scheduled, it will process the input items and generate the result\nincrementally. As soon as the first result is generated, the state is changed to `running`.\nThe results can be downloaded via `/v1/runs/{run_id}/results` endpoint.\nWhen all items are processed and all results are generated, the application status is set to\n`completed`. If the processing is done, but some items fail, the status is set to\n`completed_with_error`.\n\nWhen the application run request is rejected by the Platform before scheduling, it is transferred\nto `rejected`. When the application run reaches the threshold of number of failed items, the whole\napplication run is set to `canceled_system` and the remaining pending items are not processed.\nWhen the application run fails, the finished item results are available for download.\n\nIf the application run is canceled by calling `POST /v1/runs/{run_id}/cancel` endpoint, the\nprocessing of the items is stopped, and the application status is set to `cancelled_user`\n    "
          },
          "triggered_at": {
            "type": "string",
            "format": "date-time",
            "title": "Triggered At",
            "description": "Timestamp showing when the application run was triggered"
          },
          "triggered_by": {
            "type": "string",
            "title": "Triggered By",
            "description": "Id of the user who triggered the application run"
          }
        },
        "type": "object",
        "required": [
          "application_run_id",
          "application_version_id",
          "organization_id",
          "status",
          "triggered_at",
          "triggered_by"
        ],
        "title": "RunReadResponse"
      },
      "TransferUrls": {
        "properties": {
          "upload_url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Upload Url"
          },
          "download_url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Download Url"
          }
        },
        "type": "object",
        "required": [
          "upload_url",
          "download_url"
        ],
        "title": "TransferUrls"
      },
      "UserPayload": {
        "properties": {
          "application_id": {
            "type": "string",
            "title": "Application Id"
          },
          "application_run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Application Run Id"
          },
          "global_output_artifacts": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/PayloadOutputArtifact"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Global Output Artifacts"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PayloadItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "application_id",
          "application_run_id",
          "global_output_artifacts",
          "items"
        ],
        "title": "UserPayload"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2AuthorizationCodeBearer": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "scopes": {},
            "authorizationUrl": "https://dev-8ouohmmrbuh2h4vu.eu.auth0.com/authorize",
            "tokenUrl": "https://dev-8ouohmmrbuh2h4vu.eu.auth0.com/oauth/token"
          }
        }
      }
    }
  }
}
